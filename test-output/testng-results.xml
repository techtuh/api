<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-08T01:10:24 EST" name="Suite" finished-at="2024-02-08T01:10:27 EST" duration-ms="2785">
    <groups>
    </groups>
    <test started-at="2024-02-08T01:10:24 EST" name="Test" finished-at="2024-02-08T01:10:27 EST" duration-ms="2785">
      <class name="com.generic.DeleteData">
        <test-method is-config="true" signature="getSetup()[pri:0, instance:com.generic.DeleteData@78e4deb0]" started-at="2024-02-08T01:10:24 EST" name="getSetup" finished-at="2024-02-08T01:10:27 EST" duration-ms="2426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSetup -->
        <test-method signature="getAttributeValue()[pri:0, instance:com.generic.DeleteData@78e4deb0]" started-at="2024-02-08T01:10:27 EST" name="getAttributeValue" finished-at="2024-02-08T01:10:27 EST" duration-ms="152" status="FAIL">
          <exception class="io.restassured.path.json.exception.JsonPathException">
            <message>
              <![CDATA[Failed to parse the JSON document]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.restassured.path.json.exception.JsonPathException: Failed to parse the JSON document
at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1002)
at io.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:967)
at io.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:1047)
at io.restassured.path.json.JsonPath.get(JsonPath.java:202)
at com.generic.DeleteData.getAttributeValue(DeleteData.java:64)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: groovy.json.JsonException: Lexing failed on line: 1, column: 1, while reading '<', no possible valid JSON value or punctuation could be recognized.
at groovy.json.JsonLexer.nextToken(JsonLexer.java:86)
at groovy.json.JsonLexer$nextToken.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:130)
at io.restassured.internal.path.json.ConfigurableJsonSlurper.parse(ConfigurableJsonSlurper.groovy:97)
at io.restassured.internal.path.json.ConfigurableJsonSlurper$parse.callCurrent(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.path.json.ConfigurableJsonSlurper.parseText(ConfigurableJsonSlurper.groovy:83)
at io.restassured.path.json.JsonPath$4$1.method(JsonPath.java:965)
at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1000)
... 19 more
]]>
            </full-stacktrace>
          </exception> <!-- io.restassured.path.json.exception.JsonPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAttributeValue -->
        <test-method signature="getBodyNotNull()[pri:0, instance:com.generic.DeleteData@78e4deb0]" started-at="2024-02-08T01:10:27 EST" name="getBodyNotNull" finished-at="2024-02-08T01:10:27 EST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBodyNotNull -->
        <test-method signature="getContentType()[pri:0, instance:com.generic.DeleteData@78e4deb0]" started-at="2024-02-08T01:10:27 EST" name="getContentType" finished-at="2024-02-08T01:10:27 EST" duration-ms="40" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getContentType -->
        <test-method signature="getResponseTime()[pri:0, instance:com.generic.DeleteData@78e4deb0]" started-at="2024-02-08T01:10:27 EST" name="getResponseTime" finished-at="2024-02-08T01:10:27 EST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResponseTime -->
        <test-method signature="getStatCode()[pri:0, instance:com.generic.DeleteData@78e4deb0]" started-at="2024-02-08T01:10:27 EST" name="getStatCode" finished-at="2024-02-08T01:10:27 EST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStatCode -->
        <test-method is-config="true" signature="teaDown()[pri:0, instance:com.generic.DeleteData@78e4deb0]" started-at="2024-02-08T01:10:27 EST" name="teaDown" finished-at="2024-02-08T01:10:27 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teaDown -->
      </class> <!-- com.generic.DeleteData -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
